# =============================================
# Python .gitignore para Asistente IA Dinámico
# =============================================

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# =============================================
# Archivos específicos del proyecto
# =============================================

# Variables de entorno sensibles
.env.local
.env.production
.env.staging
.env.development

# Archivos de configuración con datos sensibles
config.local.json
secrets.json
credentials.json

# Logs del asistente
logs/
*.log
assistant.log
conversation.log

# Archivos temporales del asistente
temp/
temporary/
cache/
.cache/

# Archivos de backup
backup/
*.bak
*.backup

# Archivos de base de datos locales
*.db
*.sqlite
*.sqlite3
data/

# =============================================
# Archivos de IDE y editores
# =============================================

# Visual Studio Code
.vscode/
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
*.code-workspace

# Cursor IDE
.cursor/
!.cursor/mcp.json.example

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
.idea/
*.iml
*.iws
*.ipr
out/

# Sublime Text
*.tmlanguage.cache
*.tmPreferences.cache
*.stTheme.cache
*.sublime-workspace
*.sublime-project

# Atom
.atom/

# Vim
*.swp
*.swo
*~

# Emacs
*~
\#*\#
/.emacs.desktop
/.emacs.desktop.lock
*.elc
auto-save-list
tramp
.\#*

# =============================================
# Sistema operativo
# =============================================

# macOS
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Windows
Thumbs.db
ehthumbs.db
Desktop.ini
$RECYCLE.BIN/
*.cab
*.msi
*.msm
*.msp
*.lnk

# Linux
*~
.fuse_hidden*
.directory
.Trash-*
.nfs*

# =============================================
# Archivos de modelo y embeddings
# =============================================

# Modelos de machine learning
models/
*.model
*.pkl
*.pickle
*.joblib
*.h5
*.hdf5
*.pb
*.onnx
*.tflite

# Cache de embeddings
embeddings_cache/
.sentence_transformers_cache/
.transformers_cache/

# =============================================
# Archivos de configuración específicos
# =============================================

# Configuración MCP local (mantener ejemplo)
mcp.json
!mcp.json.example

# Configuración de Qdrant local
qdrant_local.json
qdrant_config.json

# Tokens y claves API
api_keys.txt
tokens.txt
.secrets

# =============================================
# Archivos de prueba y desarrollo
# =============================================

# Archivos de prueba temporales
test_output/
testing/
sandbox/
playground/

# Notebooks de desarrollo
dev_notebooks/
experimental/
*.ipynb

# Archivos de profiling
*.prof
*.profile

# =============================================
# Archivos de deployment
# =============================================

# Docker
.dockerignore
Dockerfile.local
docker-compose.override.yml

# Kubernetes
k8s-local/
*.yaml.local

# Terraform
*.tfstate
*.tfstate.*
.terraform/
.terraform.lock.hcl

# =============================================
# Archivos de documentación generados
# =============================================

# Documentación auto-generada
api_docs/
_build/
_static/
_templates/

# =============================================
# Archivos específicos de dependencias
# =============================================

# Poetry
poetry.lock

# Conda
*.yaml
!environment.yml.example

# pip-tools
requirements-dev.txt
requirements.local.txt

# =============================================
# Archivos de monitoreo y analytics
# =============================================

# Archivos de métricas
metrics/
analytics/
monitoring/

# Archivos de telemetría
telemetry/
traces/

# =============================================
# Otros archivos temporales
# =============================================

# Archivos de lock
*.lock
.lockfile

# Archivos de proceso
*.pid
*.seed
*.pid.lock

# Archivos de runtime
pids
*.pid
*.seed
*.pid.lock

# Coverage directory used by tools like istanbul
coverage/

# nyc test coverage
.nyc_output

# Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-task-files)
.grunt

# Bower dependency directory (https://bower.io/)
bower_components

# node_modules (si se usa Node.js para alguna herramienta)
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# =============================================
# Archivos personalizados del usuario
# =============================================

# Notas personales
NOTES.md
TODO.md
PERSONAL.md

# Configuración personal
.personal/

# Archivos locales del usuario
user_*
local_*

# =============================================
# Fin del .gitignore
# ============================================= 